try Date.From(Text.Range([#"Source.Name"], Text.Length([#"Source.Name"]) - 15, 10)) otherwise null   para procesadas

try Date.FromText(
    Text.Middle(Text.BeforeDelimiter([#"Source.Name"], ".xlsx"), Text.Length(Text.BeforeDelimiter([#"Source.Name"], ".xlsx")) - 8, 2) & "-" &
    Text.Middle(Text.BeforeDelimiter([#"Source.Name"], ".xlsx"), Text.Length(Text.BeforeDelimiter([#"Source.Name"], ".xlsx")) - 5, 2) & "-" &
    "20" & Text.End(Text.BeforeDelimiter([#"Source.Name"], ".xlsx"), 2)
) otherwise null
  para sometidas


try Date.FromText(
    Text.Middle(Text.BeforeDelimiter([#"Source.Name"], ".xlsx"), Text.Length(Text.BeforeDelimiter([#"Source.Name"], ".xlsx")) - 8, 2) & "-" &
    Text.Middle(Text.BeforeDelimiter([#"Source.Name"], ".xlsx"), Text.Length(Text.BeforeDelimiter([#"Source.Name"], ".xlsx")) - 6, 2) & "-" &
    Text.End(Text.BeforeDelimiter([#"Source.Name"], ".xlsx"), 4)
) otherwise null
          para no procesadas


Para quitar los casos que no se toman en cuenta dentro del analisis:

Table.SelectRows(#"Paso anterior", each [Referencia] <> 0)



PARA CRUCE


Primer en lbtr no procesada

Crear columna Referencia_Recortada (primeros 9 dígitos del TRANSACTION_ID):

Text.Start(Text.From([TRANSACTION_ID]), 9)

Cambiar nombre de columnas para que se alineen con las transacciones:

Table.RenameColumns(#"Paso anterior", {
  {"CUENTA", "Numero de cuenta"},
  {"Referencia_Recortada", "Referencia"},
  {"MONTO", "Valor"}
})

join key column

[Numero de cuenta] & "-" & Text.From([Referencia]) & "-" & Text.From([Valor])


VARIABLES CREADAS

Combinación de análisis

Text.From(Record.FieldOrDefault(_, "Numero reclamación", "")) & "-" &
Text.From(Record.FieldOrDefault(_, "Numero de cuenta", "")) & "-" &
Text.From(Record.FieldOrDefault(_, "Referencia_LBTR", "")) & "-" &
Text.From(Record.FieldOrDefault(_, "Valor_LBTR", ""))




LBTR Identificado

if [Source.Name_LBTR] <> null then [Source.Name_LBTR] else null

Dictamen Inicial

if Text.Trim([Referencia_LBTR]) <> "" and Text.Trim([Valor_LBTR]) <> "" then
    "Aprobado"
else
    "Rechazada, no aplica a resolutor masivo"


Respuesta

if [Dictamen Inicial] = "Reclamación aprobada" then
    "Reclamación " & Text.From([Numero reclamación]) &
    " aprobada. Transacción reversada con el reporte de la fecha " &
    Text.From([FechaReporte_LBTR])
else
    ""


Testing en Asignado a, paso final para el resolutor


let
    Source = Excel.Workbook(Parameter5, null, true),
    #"Promoted Headers" = Table.PromoteHeaders(Source{[Item="output - 2025-07-08T075640.744",Kind="Sheet"]}[Data], [PromoteAllScalars=true]),
    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers", {{"N° de identificación", type text}, {"Descripción", type text}}),
    #"Cleaned Errors" = Table.ReplaceErrorValues(#"Changed Type", {{"Descripción", ""}})
in
    #"Cleaned Errors"


Ajuste de fecha para que se muestre el anterior:

Codigo anterior: = Table.AddColumn(#"Added Custom2", "Respuesta", each if [Dictamen Inicial] = "Reclamación Aprobada" then "Reclamación " & Text.From([Numero reclamación]) & " aprobada. Transacción reversada con el reporte de la fecha " & Text.From([FechaReporte_LBTR]))


= Table.AddColumn(#"Added Custom2", "Respuesta", each 
    if [Dictamen Inicial] = "Reclamación Aprobada" then
        let
            dateText = Text.From([FechaReporte_LBTR]),
            parsedDate = Date.FromText(Date.ToText(Date.FromText(dateText, "es-ES"), "yyyy-MM-dd")),
            weekdayNum = Date.DayOfWeek(parsedDate, Day.Monday),  // lunes = 0, viernes = 4
            adjustedDate = if weekdayNum = 4 then Date.AddDays(parsedDate, 3) else Date.AddDays(parsedDate, 1)
        in
            "Reclamación " & Text.From([Numero reclamación]) & 
            " aprobada. Transacción reversada con el reporte de la fecha " & Date.ToText(adjustedDate, "dd/MM/yyyy")
    else
        "No aplica."
)


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''RESOLUTOR MASIVO ACH REVERSA''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

FechaReporte
En proceso ACH reverso

= Table.AddColumn(#"Changed Type", "FechaReporte", each 
    let
        nombreArchivo = [Source.Name],
        fechaTexto = Text.Middle(nombreArchivo, Text.Length(nombreArchivo) - 14, 8),
        dia = Text.Middle(fechaTexto, 0, 2),
        mes = Text.Middle(fechaTexto, 3, 2),
        año = "20" & Text.End(fechaTexto, 2)
    in
        dia & "/" & mes & "/" & año
)

Sometido ACH reverso

= Table.AddColumn(#"Changed Type", "FechaReporte", each 
    let
        nombreArchivo = [Source.Name],
        fechaTexto = Text.Middle(nombreArchivo, Text.Length(nombreArchivo) - 14, 8),
        dia = Text.Middle(fechaTexto, 0, 2),
        mes = Text.Middle(fechaTexto, 3, 2),
        año = "20" & Text.End(fechaTexto, 2)
    in
        dia & "/" & mes & "/" & año
)


fecha reporte promesas ACH reversa

= Table.AddColumn(#"Previous Step", "FechaReporte", each try Date.From(Text.Range([Source.Name], Text.Length([Source.Name]) - 15, 10)) otherwise null)








= Table.AddColumn(#"Changed Type", "FechaReporte", each try
    let
        fechaTexto = Text.BeforeDelimiter(Text.AfterDelimiter([Source.Name], "LBTR  NO PROCESADA "), ".xlsx"),
        dia = Text.Start(fechaTexto, 2),
        mes = Text.Range(fechaTexto, 2, 2),
        año = Text.End(fechaTexto, 4),
        fechaFormateada = Date.FromText(dia & "/" & mes & "/" & año)
    in
        fechaFormateada
otherwise null)




